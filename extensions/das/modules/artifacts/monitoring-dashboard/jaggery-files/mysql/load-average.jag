<%
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
include("monitoring-authentication.jag");

(function () {

    var TIME_INTERVAL_1 = '30 Minutes';
    var TIME_INTERVAL_2 = '1 Hour';
    var TIME_INTERVAL_3 = '6 Hours';
    var TIME_INTERVAL_4 = '1 Day';
    var TIME_INTERVAL_5 = '1 Week';
    var TIME_INTERVAL_6 = '1 Month';
    var TIME_INTERVAL_7 = '6 Months';
    var TIME_INTERVAL_8 = '1 Year';
    var ALL_MEMBERS = 'All Members';

    var db = new Database("WSO2_PPAAS_ANALYTICS_DB");

    try {
        var result;
        var timeInterval = request.getParameter("time");
        var interval = 30 * 60 * 1000; //time interval in millisecond to filter data
        var x_axis_interval; // x axis 1 unit interval in seconds

        if (timeInterval === TIME_INTERVAL_1) {
            interval = 30 * 60 * 1000;
            x_axis_interval = 60;
        } else if (timeInterval === TIME_INTERVAL_2) {
            interval = 2 * 30 * 60 * 1000;
            x_axis_interval = 60;
        } else if (timeInterval === TIME_INTERVAL_3) {
            interval = 6 * 2 * 30 * 60 * 1000;
            x_axis_interval = 3 * 60;
        } else if (timeInterval === TIME_INTERVAL_4) {
            interval = 24 * 2 * 30 * 60 * 1000;
            x_axis_interval = 4 * 3 * 60;
        } else if (timeInterval === TIME_INTERVAL_5) {
            interval = 7 * 24 * 2 * 30 * 60 * 1000;
            x_axis_interval = 7 * 4 * 3 * 60;
        } else if (timeInterval === TIME_INTERVAL_6) {
            interval = 30 * 24 * 2 * 30 * 60 * 1000;
            x_axis_interval = 4 * 7 * 4 * 3 * 60;
        } else if (timeInterval === TIME_INTERVAL_7) {
            interval = 365 / 2 * 24 * 2 * 30 * 60 * 1000;
            x_axis_interval = 6 * 4 * 7 * 4 * 3 * 60;
        } else if (timeInterval === TIME_INTERVAL_8) {
            interval = 365 * 24 * 2 * 30 * 60 * 1000;
            x_axis_interval = 2 * 6 * 4 * 7 * 4 * 3 * 60;
        }

        var clusterId = request.getParameter("clusterId");
        var memberId = request.getParameter("memberId");

        if (memberId == ALL_MEMBERS) {
            result = db.query("SELECT Time, AVG(Value) AS Value FROM AVERAGE_LOAD_AVERAGE_STATS WHERE ClusterId=? AND" +
                    " Time > ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000-'" + interval + "' ) AND Time <= ROUND" +
                    "(UNIX_TIMESTAMP(CURTIME(4)) * 1000) GROUP BY CEILING(Time/('" + x_axis_interval + "' * 1000)) " +
                    "*'" + x_axis_interval + "', ClusterId ORDER BY Time", clusterId);
        } else {
            result = db.query("SELECT Time, AVG(Value) AS Value FROM MEMBER_AVERAGE_LOAD_AVERAGE_STATS WHERE " +
                    "ClusterId=? AND MemberId=? AND Time > ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000-'" + interval + "'" +
                    " ) AND Time <= ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000) GROUP BY CEILING(Time/('" +
                    x_axis_interval + "' * 1000)) *'" + x_axis_interval + "', ClusterId, MemberId ORDER BY Time",
                    clusterId, memberId);
        }
        print(result);

    }
    catch (e) {
        print(e.toString());
    }
    finally {
        db.close();
    }
}());
%>